local_costmap:
    global_frame: odom
    robot_base_frame: base_link
    update_frequency: 5.0
    publish_frequency: 1.0
    width: 8.0
    height: 8.0
    resolution: 0.05
    static_map: false
    rolling_window: true

    plugins:
    - {name: obstacles_layer, type: "costmap_2d::ObstacleLayer"}
    - {name: camera_spatio_layer, type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}
    - {name: inflater_layer, type: "costmap_2d::InflationLayer"}

    camera_spatio_layer:
        enabled:               true
        voxel_decay:           12     #seconds if linear, e^n if exponential
        decay_model:           0      #0=linear, 1=exponential, -1=persistent
        voxel_size:            0.025  #meters
        track_unknown_space:   true   #default space is unknown
        observation_persistence: 0.0  #seconds
        max_obstacle_height:   0.5
        unknown_threshold:     15     #voxel height
        mark_threshold:        0      #voxel height
        update_footprint_enabled: true
        combination_method:    1      #1=max, 0=override
        obstacle_range:        2.5    #meters
        origin_z:              0.0    #meters
        publish_voxel_map:     true   # default off
        transform_tolerance:   0.2    # seconds
        mapping_mode:          false  # default off, saves map not for navigation
        map_save_duration:     60     #default 60s, how often to autosave
        observation_sources: velodyne_lidar_mark velodyne_lidar_clear
        velodyne_lidar_mark:
            data_type: PointCloud2
            topic: /mid/points
            marking: true
            clearing: false
            min_obstacle_height: 0.01       #default 0, meters
            max_obstacle_height: 0.5        #defaule 3, meters
            expected_update_rate: 0.0       #default 0, if not updating at this rate at least, remove from buffer
            observation_persistence: 0.0    #default 0, use all measurements taken during now-value, 0=latest 
            inf_is_valid: false             #default false, for laser scans
            clear_after_reading: true       #default false, clear the buffer after the layer gets readings from it
            filter: "voxel"                 #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
            voxel_min_points: 0             #default 0, minimum points per voxel for voxel filter
        velodyne_lidar_clear:
            data_type: PointCloud2
            topic: /mid/points
            marking: false
            clearing: true
            max_z: 8.0                  # default 0, meters
            min_z: 0.0                  # default 10, meters
            decay_acceleration: 5.0 
            model_type: 1 

    inflater_layer:
        inflation_radius: 0.3